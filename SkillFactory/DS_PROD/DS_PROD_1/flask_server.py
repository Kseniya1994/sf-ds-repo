from flask import Flask
app = Flask(__name__)

#Теперь мы можем написать функцию, которая будет обрабатывать запросы, 
# и прикрепить её к какому-то пути (URI). Это делается с помощью специального декоратора route.

@app.route('/hello')
def hello_func():
    return 'hello!'

# Наша функция пока не делает никакой обработки и просто отвечает строкой с приветствием. 
# Нам осталось запустить приложение. Для этого выполним метод run, не забыв занести его в стандартный main.

if __name__ == '__main__':

    app.run('localhost', 5000)
    
# 7.3
# Напишите новую функцию index(), которая будет возвращать строку 
# "Test message. The server is running". Оберните эту функцию в декоратор app.route(), указав в качестве эндпоинта '/'. 
# Данный эндпоинт будет соответствовать обращению к сайту по дефолтному адресу: http://localhost:5000/.

# Перезапустите веб-сервис и зайдите по этому адресу. В поле для ответа введите код обработки, который вернулся в результате выполнения GET-запроса.

@app.route('/')
def index():
    return "Test message. The server is running"

# 7.4
# Напишите функцию current_time, которая будет возвращать словарь, где ключ — 'time', а значение — текущее время.

# Оберните эту функцию в декоратор app.route() с эндпоинтом /time.

# Попробуйте обратиться к сервису по заданному эндпоинту.

# По какой ссылке вы переходили, чтобы увидеть, правильно ли работает ваш скрипт? В поле ниже вставьте ссылку.
# from flask import Flask
import datetime
app = Flask(__name__)

@app.route('/time')
def current_time():
    return {'time': datetime.datetime.now()}
if __name__ == '__main__':
    app.run('localhost', 5000)
# Для выполнения запроса используется ссылка http://localhost:5000/time.

